// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button Danger Button 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz sc-eCssSg cyGFrJ idYIKj fhqBPM"
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Default 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz cyGFrJ idYIKj"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Disabled Button 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz cyGFrJ cEuHLh"
  disabled={true}
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Info Button 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz sc-gKsewC cyGFrJ idYIKj ewFvJk"
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Primary Button 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz cyGFrJ idYIKj"
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Secondary Button 1`] = `
<button
  className="sc-bdfBwQ sc-dlfnbm cyGFrJ lfeWES"
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Success Button 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz sc-hKgILt cyGFrJ idYIKj TIYhH"
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Button Warning Button 1`] = `
<button
  className="sc-bdfBwQ sc-gsTCUz sc-jSgupP cyGFrJ idYIKj idEWKJ"
  onClick={[Function]}
  type="button"
>
  Button1
</button>
`;

exports[`Storyshots Checklist/Box Checked 1`] = `
<li
  className="sc-iBPRYJ jKnhWV"
  onClick={[Function]}
>
  <div
    checked={true}
    className="sc-pFZIQ fmZZtg"
    name="checked"
  >
    <span
      className="sc-fubCfw dtOUQi"
    />
  </div>
  <label
    className="sc-jrAGrp JyyWV"
  >
    Checkbox 1
  </label>
</li>
`;

exports[`Storyshots Checklist/Box Default 1`] = `
<li
  className="sc-iBPRYJ jKnhWV"
  onClick={[Function]}
>
  <div
    checked={false}
    className="sc-pFZIQ isygga"
    name="checked"
  >
    <span
      className="sc-fubCfw dtOUQi"
    />
  </div>
  <label
    className="sc-jrAGrp JyyWV"
  >
    Checkbox 1
  </label>
</li>
`;

exports[`Storyshots Checklist/List Button Count Selected 1`] = `
Array [
  <div
    className="sc-iqHYGH ieFfmB"
  >
    <h3
      className="sc-crrsfI ZJBwD"
    >
      Checklist
    </h3>
    <ul
      className="sc-kEjbxe jBaOCx"
    >
      <div>
        No results
      </div>
    </ul>
    <div
      className="sc-dQppl jIJTTQ"
    >
      <button
        className="sc-bdfBwQ sc-gsTCUz cyGFrJ idYIKj"
        onClick={[Function]}
        type="button"
      >
        Filter 0 items
      </button>
    </div>
  </div>,
  <div>
    
  </div>,
]
`;

exports[`Storyshots Checklist/List Count Selected 1`] = `
Array [
  <div
    className="sc-iqHYGH ieFfmB"
  >
    <h3
      className="sc-crrsfI ZJBwD"
    >
      Checklist
    </h3>
    <ul
      className="sc-kEjbxe jBaOCx"
    >
      <div>
        No results
      </div>
    </ul>
  </div>,
  <div>
    Checked count: 
    0
  </div>,
  <div>
    Checked ids:
  </div>,
]
`;

exports[`Storyshots Checklist/List Custom Line Item 1`] = `
<div
  className="sc-iqHYGH ieFfmB"
>
  <h3
    className="sc-crrsfI ZJBwD"
  >
    TextList
  </h3>
  <ul
    className="sc-kEjbxe jBaOCx"
  >
    <div>
      No results
    </div>
  </ul>
</div>
`;

exports[`Storyshots Checklist/List Empty Story 1`] = `
<div
  className="sc-iqHYGH ieFfmB"
>
  <h3
    className="sc-crrsfI ZJBwD"
  >
    Checklist compo
  </h3>
  <ul
    className="sc-kEjbxe jBaOCx"
  >
    <div>
      No results
    </div>
  </ul>
</div>
`;

exports[`Storyshots Checklist/List Filled 1`] = `
<div
  className="sc-iqHYGH ieFfmB"
>
  <h3
    className="sc-crrsfI ZJBwD"
  >
    Checklist
  </h3>
  <ul
    className="sc-kEjbxe jBaOCx"
  >
    <div>
      No results
    </div>
  </ul>
</div>
`;

exports[`Storyshots Checklist/List Filter Action Component 1`] = `
Array [
  <div
    className="sc-iqHYGH ieFfmB"
  >
    <h3
      className="sc-crrsfI ZJBwD"
    >
      Checklist
    </h3>
    <div
      className="sc-bqyKva dbdRUn"
    >
      <button
        className="sc-bdfBwQ sc-gsTCUz cyGFrJ idYIKj"
        onClick={[Function]}
        type="button"
      >
        Filter 0 items
      </button>
    </div>
    <ul
      className="sc-kEjbxe jBaOCx"
    >
      <div>
        No results
      </div>
    </ul>
  </div>,
  <div>
    
  </div>,
]
`;

exports[`Storyshots Checklist/List Filtering 1`] = `
Array [
  <div
    className="sc-iqHYGH ieFfmB"
  >
    <h3
      className="sc-crrsfI ZJBwD"
    >
      Filterable Checklist
    </h3>
    <div
      className="sc-bqyKva dbdRUn"
    >
      <div
        className="MuiFormControl-root MuiTextField-root"
      >
        <label
          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
          data-shrink={false}
        >
          Filter...
        </label>
        <div
          className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
          onClick={[Function]}
        >
          <input
            aria-invalid={false}
            autoFocus={false}
            className="MuiInputBase-input MuiInput-input MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch"
            disabled={false}
            onAnimationStart={[Function]}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            required={false}
            type="search"
          />
        </div>
      </div>
    </div>
    <ul
      className="sc-kEjbxe jBaOCx"
    >
      <div>
        No results
      </div>
    </ul>
  </div>,
  <div>
    
  </div>,
]
`;

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="storybook-button storybook-button--large storybook-button--secondary"
  style={null}
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--primary"
  style={null}
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--secondary"
  style={null}
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="storybook-button storybook-button--small storybook-button--secondary"
  style={null}
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={null}
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={null}
        type="button"
      >
        Log in
      </button>
      <button
        className="storybook-button storybook-button--small storybook-button--primary"
        style={null}
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={null}
          type="button"
        >
          Log out
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={null}
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          style={null}
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Grid/Column Default 1`] = `
<div
  className="sc-bkzZxe ePArPG"
>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos lgDWVS"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        ColTitle
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      >
        ColSubtitle
      </div>
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem one
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos kMccsn"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem two (scheduled)
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem three
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem four
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem five
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid/Column Progress 1`] = `
<div
  className="sc-bkzZxe ePArPG"
>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos lgEYem"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        ColTitle
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      >
        ColSubtitle
      </div>
    </div>
    <div
      className="MuiLinearProgress-root MuiLinearProgress-colorPrimary MuiLinearProgress-indeterminate"
      role="progressbar"
    >
      <div
        className="MuiLinearProgress-bar MuiLinearProgress-barColorPrimary MuiLinearProgress-bar1Indeterminate"
        style={Object {}}
      />
      <div
        className="MuiLinearProgress-bar MuiLinearProgress-bar2Indeterminate MuiLinearProgress-barColorPrimary"
        style={Object {}}
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem one
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos kMccsn"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem two (scheduled)
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem three
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem four
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
  <div
    className="sc-kstrdz"
  >
    <div
      className="sc-hBEYos dAecUo"
      onClick={[Function]}
    >
      <div
        className="sc-fodVxV kxdCGS"
      >
        Elem five
      </div>
      <div
        className="sc-fFubgz ksMzVe"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid/Element Available 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos dYAoFP"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    />
  </div>
</div>
`;

exports[`Storyshots Grid/Element Closed 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos daPULX"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    />
  </div>
</div>
`;

exports[`Storyshots Grid/Element Default 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos dAecUo"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    />
  </div>
</div>
`;

exports[`Storyshots Grid/Element Header 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos lgDWVS"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    />
  </div>
</div>
`;

exports[`Storyshots Grid/Element Progress 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos dA-dbLU"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    />
  </div>
  <div
    className="MuiLinearProgress-root MuiLinearProgress-colorPrimary MuiLinearProgress-indeterminate"
    role="progressbar"
  >
    <div
      className="MuiLinearProgress-bar MuiLinearProgress-barColorPrimary MuiLinearProgress-bar1Indeterminate"
      style={Object {}}
    />
    <div
      className="MuiLinearProgress-bar MuiLinearProgress-bar2Indeterminate MuiLinearProgress-barColorPrimary"
      style={Object {}}
    />
  </div>
</div>
`;

exports[`Storyshots Grid/Element Scheduled 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos kMccsn"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    />
  </div>
</div>
`;

exports[`Storyshots Grid/Element Selected 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos jdtsYu"
    onClick={[Function]}
    selected={true}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    >
      subtitle
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid/Element Subtitle 1`] = `
<div
  className="sc-kstrdz"
>
  <div
    className="sc-hBEYos dAecUo"
    onClick={[Function]}
  >
    <div
      className="sc-fodVxV kxdCGS"
    >
      Element1
    </div>
    <div
      className="sc-fFubgz ksMzVe"
    >
      subtitle
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid/Grid Default 1`] = `
<div
  className="sc-idOhPF cTDxzS"
>
  <div>
    No results
  </div>
</div>
`;

exports[`Storyshots Grid/Grid Filled 1`] = `
Array [
  <div
    className="sc-idOhPF cTDxzS"
  >
    <div>
      No results
    </div>
  </div>,
  <div>
    event: selected col: 
    
     
  </div>,
]
`;

exports[`Storyshots StateButton Danger 1`] = `
<button
  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onDragLeave={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  tabIndex={0}
  type="button"
>
  <span
    className="MuiButton-label"
  >
    Danger
  </span>
</button>
`;

exports[`Storyshots StateButton Info 1`] = `
<button
  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onDragLeave={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  tabIndex={0}
  type="button"
>
  <span
    className="MuiButton-label"
  >
    Info
  </span>
</button>
`;

exports[`Storyshots StateButton Primary 1`] = `
<button
  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onDragLeave={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  tabIndex={0}
  type="button"
>
  <span
    className="MuiButton-label"
  >
    Primary
  </span>
</button>
`;

exports[`Storyshots StateButton Secondary 1`] = `
<button
  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onDragLeave={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  tabIndex={0}
  type="button"
>
  <span
    className="MuiButton-label"
  >
    Secondary
  </span>
</button>
`;

exports[`Storyshots StateButton Success 1`] = `
<button
  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onDragLeave={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  tabIndex={0}
  type="button"
>
  <span
    className="MuiButton-label"
  >
    Success
  </span>
</button>
`;

exports[`Storyshots StateButton Warning 1`] = `
<button
  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onDragLeave={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  onMouseLeave={[Function]}
  onMouseUp={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  tabIndex={0}
  type="button"
>
  <span
    className="MuiButton-label"
  >
    Warning
  </span>
</button>
`;

exports[`Storyshots Table Table List 1`] = `
<div
  className=""
>
  <div
    className="ag-theme-alpine"
    style={
      Object {
        "height": "24rem",
        "margin": "auto",
      }
    }
  >
    <div
      style={
        Object {
          "height": "100%",
        }
      }
    />
  </div>
</div>
`;
